<launch>
  <arg
    name="model" />
  <arg
    name="gui"
    default="True" />
  <param
    name="robot_description"
    command="$(find xacro)/xacro '$(find tb_description)/urdf/tb_sim.urdf.xacro' --inorder" />
  <param
    name="use_gui"
    value="$(arg gui)" />
  <arg name="debug" default="false"/>
  <arg name="scenario" default="empty"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="robot_ns" default="tb_sim"/>
  <arg name="use_external_controller" default="false"/>
  <arg name="use_joystick" default="false"/>
  <arg name="enable_teleop" default="true"/>
  <arg name="enable_rviz" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="headless" default="false"/> 

  <rosparam command="load" file="$(find diagnostic_updater)/src/variables.yaml" />

  <include file="$(find tb_gazebo)/launch/spawn_tb.launch">
  <arg name="x" value="0.0"/>
  <arg name="y" value="0.0"/>
  <arg name="z" value="0.1"/>
  <arg name="robot_ns" value="$(arg robot_ns)"/>
  <arg name="enable_rviz" value="$(arg enable_rviz)"/>
  </include>

 <node pkg="diagnostic_aggregator" type="aggregator_node" name="aggregator" output="screen">
   <rosparam command="load" file="$(find diagnostic_aggregator)/demo/pr2_analyzers.yaml" />
 </node>
 <node pkg="diagnostic_updater" type="imu_node" name="imu">
   <param name="diagnostic_period" value="0.05"/>
 </node>
 <node pkg="diagnostic_updater" type="scan_node" name="scan">
 </node>
 <node pkg="diagnostic_updater" type="joint_states_node" name="joint_states">
 </node>
 <node pkg="diagnostic_updater" type="tele_cam_node" name="tele_cam">
 </node>
 <node pkg="diagnostic_updater" type="nav_cam_node" name="nav_cam">
 </node>
 
  <node pkg="rqt_runtime_monitor" type="rqt_runtime_monitor" name="runtime_monitor" />
  <node pkg="rqt_robot_monitor" type="rqt_robot_monitor" name="robot_monitor" />



  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args) --verbose"/>
  </include>



  <group if="$(arg enable_teleop)">
    <include file="$(find tb_teleop)/launch/manual_controller.launch">
      <arg name="use_external_controller" value="$(arg use_external_controller)"/>
      <arg name="use_joystick" value="$(arg use_joystick)"/>
    </include>
  </group>
 
<!--  fake map frame for development-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="fake_map"
    args="0.0 0.0  0.0 0 0 0 map odom" />
</launch>

